{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEB DEVELOPMENT\\\\maximillian react course\\\\basic knowledge\\\\13-work_with_forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value.trim()); //REACT SCHEDULES THIS AND IF YOU NEED UPDATED STATE YOU MUST WRITE IT AGAIN;\n\n    if (event.target.value.trim() !== '') {\n      // WRITE AGAIN BECAUSE REACT SCHEDULING\n      setEnteredNameIsValid(true);\n      return;\n    }\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n\n    if (enteredName === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredNameIsValid(true);\n    setEnteredName('');\n  };\n\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n  console.log(nameInputIsValid);\n  const nameInputClasses = nameInputIsValid ? 'form-control  invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please type a name!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"fYx7ImHrmEUTFdfKG/bShRbN5fY=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","nameInputChangeHandler","event","target","value","trim","setEnteredNameIsValid","nameInputBlurHandler","formSubmissionHandler","e","preventDefault","console","log","nameInputIsValid","enteredNameIsValid","nameInputClasses"],"sources":["C:/WEB DEVELOPMENT/maximillian react course/basic knowledge/13-work_with_forms/src/components/SimpleInput.js"],"sourcesContent":["import {useState, useEffect} from 'react';\n\n\nconst SimpleInput = (props) => {\n  const [enteredName,setEnteredName]= useState('');\n  const [enteredNameTouched,setEnteredNameTouched]=useState(false);\n\n    \n\n  const nameInputChangeHandler= (event)=>{    \n    setEnteredName(event.target.value.trim()); //REACT SCHEDULES THIS AND IF YOU NEED UPDATED STATE YOU MUST WRITE IT AGAIN;\n    if(event.target.value.trim() !== ''){ // WRITE AGAIN BECAUSE REACT SCHEDULING\n      setEnteredNameIsValid(true);\n      return ;\n    }\n  }\n  const nameInputBlurHandler= ()=>{\n    setEnteredNameTouched(true);\n    if(enteredName === ''){\n      setEnteredNameIsValid(false);\n      return ;\n    }\n  }\n\n  const formSubmissionHandler = (e)=>{\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if(enteredName === ''){\n      setEnteredNameIsValid(false);\n      return ;\n    }\n    console.log(enteredName); \n    setEnteredNameIsValid(true);\n    setEnteredName('');\n\n  }\n\n  const nameInputIsValid= !enteredNameIsValid && enteredNameTouched;\n  console.log(nameInputIsValid);\n\n  const nameInputClasses= nameInputIsValid ? 'form-control  invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler} >\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        type='text' \n        id='name'\n        onChange={ nameInputChangeHandler }\n        onBlur={nameInputBlurHandler}\n        value={enteredName}/>\n      </div>\n      {nameInputIsValid && <p className='error-text' >Please type a name!!!</p>}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,WAAD,EAAaC,cAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACM,kBAAD,EAAoBC,qBAApB,IAA2CP,QAAQ,CAAC,KAAD,CAAzD;;EAIA,MAAMQ,sBAAsB,GAAGC,KAAD,IAAS;IACrCJ,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,EAAD,CAAd,CADqC,CACM;;IAC3C,IAAGH,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,OAA8B,EAAjC,EAAoC;MAAE;MACpCC,qBAAqB,CAAC,IAAD,CAArB;MACA;IACD;EACF,CAND;;EAOA,MAAMC,oBAAoB,GAAE,MAAI;IAC9BP,qBAAqB,CAAC,IAAD,CAArB;;IACA,IAAGH,WAAW,KAAK,EAAnB,EAAsB;MACpBS,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;EACF,CAND;;EAQA,MAAME,qBAAqB,GAAIC,CAAD,IAAK;IACjCA,CAAC,CAACC,cAAF;IACAV,qBAAqB,CAAC,IAAD,CAArB;;IACA,IAAGH,WAAW,KAAK,EAAnB,EAAsB;MACpBS,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IACDK,OAAO,CAACC,GAAR,CAAYf,WAAZ;IACAS,qBAAqB,CAAC,IAAD,CAArB;IACAR,cAAc,CAAC,EAAD,CAAd;EAED,CAXD;;EAaA,MAAMe,gBAAgB,GAAE,CAACC,kBAAD,IAAuBf,kBAA/C;EACAY,OAAO,CAACC,GAAR,CAAYC,gBAAZ;EAEA,MAAME,gBAAgB,GAAEF,gBAAgB,GAAG,uBAAH,GAA6B,cAArE;EAEA,oBACE;IAAM,QAAQ,EAAEL,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEO,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACA,IAAI,EAAC,MADL;QAEA,EAAE,EAAC,MAFH;QAGA,QAAQ,EAAGd,sBAHX;QAIA,MAAM,EAAEM,oBAJR;QAKA,KAAK,EAAEV;MALP;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAUGgB,gBAAgB,iBAAI;MAAG,SAAS,EAAC,YAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVvB,eAWE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAxDD;;GAAMlB,W;;KAAAA,W;AA0DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}